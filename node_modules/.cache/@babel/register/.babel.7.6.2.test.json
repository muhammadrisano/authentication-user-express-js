{
  "{\"sourceRoot\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"filename\":\"/home/risano/PROJECTJS/NODEJS/Jeager/app.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"plugins\":[],\"presets\":[]}:7.6.2:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "filename": "/home/risano/PROJECTJS/NODEJS/Jeager/app.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/risano/PROJECTJS/NODEJS/Jeager/app.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/risano/PROJECTJS/NODEJS/Jeager/app.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager",
        "sourceFileName": "app.js"
      }
    },
    "ast": null,
    "code": "\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIvaG9tZS9yaXNhbm8vUFJPSkVDVEpTL05PREVKUy9KZWFnZXIiLCJzb3VyY2VzQ29udGVudCI6W119",
    "map": {
      "version": 3,
      "sources": [],
      "names": [],
      "mappings": "",
      "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "sourcesContent": []
    },
    "sourceType": "module",
    "mtime": 1570506138736
  },
  "{\"sourceRoot\":\"/home/risano/PROJECTJS/NODEJS/Jeager/src/routers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"filename\":\"/home/risano/PROJECTJS/NODEJS/Jeager/src/routers/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"plugins\":[],\"presets\":[]}:7.6.2:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/routers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "filename": "/home/risano/PROJECTJS/NODEJS/Jeager/src/routers/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/risano/PROJECTJS/NODEJS/Jeager/src/routers/user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/risano/PROJECTJS/NODEJS/Jeager/src/routers/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/routers",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst Route = express.Router();\n\nconst userController = require('../controllers/user');\n\nconst Auth = require('../helpers/auth');\n\nRoute.all('/*', Auth.authInfo).get('/', Auth.accesstoken, userController.getUser).get('/:id_user', Auth.accesstoken, userController.userDetail).patch('/updatepassword/:id_user', Auth.accesstoken, userController.updatePassword).post('/insert', Auth.accesstoken, Auth.authadmin, userController.insertUser).post('/login', userController.login);\nmodule.exports = Route;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJSb3V0ZSIsIlJvdXRlciIsInVzZXJDb250cm9sbGVyIiwiQXV0aCIsImFsbCIsImF1dGhJbmZvIiwiZ2V0IiwiYWNjZXNzdG9rZW4iLCJnZXRVc2VyIiwidXNlckRldGFpbCIsInBhdGNoIiwidXBkYXRlUGFzc3dvcmQiLCJwb3N0IiwiYXV0aGFkbWluIiwiaW5zZXJ0VXNlciIsImxvZ2luIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxLQUFLLEdBQUdGLE9BQU8sQ0FBQ0csTUFBUixFQUFkOztBQUNBLE1BQU1DLGNBQWMsR0FBR0gsT0FBTyxDQUFDLHFCQUFELENBQTlCOztBQUNBLE1BQU1JLElBQUksR0FBR0osT0FBTyxDQUFDLGlCQUFELENBQXBCOztBQUVBQyxLQUFLLENBQ0FJLEdBREwsQ0FDUyxJQURULEVBQ2VELElBQUksQ0FBQ0UsUUFEcEIsRUFFS0MsR0FGTCxDQUVTLEdBRlQsRUFFY0gsSUFBSSxDQUFDSSxXQUZuQixFQUVnQ0wsY0FBYyxDQUFDTSxPQUYvQyxFQUdLRixHQUhMLENBR1MsV0FIVCxFQUdzQkgsSUFBSSxDQUFDSSxXQUgzQixFQUd3Q0wsY0FBYyxDQUFDTyxVQUh2RCxFQUlLQyxLQUpMLENBSVcsMEJBSlgsRUFJdUNQLElBQUksQ0FBQ0ksV0FKNUMsRUFJeURMLGNBQWMsQ0FBQ1MsY0FKeEUsRUFLS0MsSUFMTCxDQUtVLFNBTFYsRUFLcUJULElBQUksQ0FBQ0ksV0FMMUIsRUFLdUNKLElBQUksQ0FBQ1UsU0FMNUMsRUFLdURYLGNBQWMsQ0FBQ1ksVUFMdEUsRUFNS0YsSUFOTCxDQU1VLFFBTlYsRUFNb0JWLGNBQWMsQ0FBQ2EsS0FObkM7QUFRQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCakIsS0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcmlzYW5vL1BST0pFQ1RKUy9OT0RFSlMvSmVhZ2VyL3NyYy9yb3V0ZXJzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IFJvdXRlID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbmNvbnN0IHVzZXJDb250cm9sbGVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvdXNlcicpXG5jb25zdCBBdXRoID0gcmVxdWlyZSgnLi4vaGVscGVycy9hdXRoJylcblxuUm91dGVcbiAgICAuYWxsKCcvKicsIEF1dGguYXV0aEluZm8pXG4gICAgLmdldCgnLycsIEF1dGguYWNjZXNzdG9rZW4sIHVzZXJDb250cm9sbGVyLmdldFVzZXIpXG4gICAgLmdldCgnLzppZF91c2VyJywgQXV0aC5hY2Nlc3N0b2tlbiwgdXNlckNvbnRyb2xsZXIudXNlckRldGFpbClcbiAgICAucGF0Y2goJy91cGRhdGVwYXNzd29yZC86aWRfdXNlcicsIEF1dGguYWNjZXNzdG9rZW4sIHVzZXJDb250cm9sbGVyLnVwZGF0ZVBhc3N3b3JkKVxuICAgIC5wb3N0KCcvaW5zZXJ0JywgQXV0aC5hY2Nlc3N0b2tlbiwgQXV0aC5hdXRoYWRtaW4sIHVzZXJDb250cm9sbGVyLmluc2VydFVzZXIpXG4gICAgLnBvc3QoJy9sb2dpbicsIHVzZXJDb250cm9sbGVyLmxvZ2luKVxuXG5tb2R1bGUuZXhwb3J0cyA9IFJvdXRlOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "express",
        "require",
        "Route",
        "Router",
        "userController",
        "Auth",
        "all",
        "authInfo",
        "get",
        "accesstoken",
        "getUser",
        "userDetail",
        "patch",
        "updatePassword",
        "post",
        "authadmin",
        "insertUser",
        "login",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGF,OAAO,CAACG,MAAR,EAAd;;AACA,MAAMC,cAAc,GAAGH,OAAO,CAAC,qBAAD,CAA9B;;AACA,MAAMI,IAAI,GAAGJ,OAAO,CAAC,iBAAD,CAApB;;AAEAC,KAAK,CACAI,GADL,CACS,IADT,EACeD,IAAI,CAACE,QADpB,EAEKC,GAFL,CAES,GAFT,EAEcH,IAAI,CAACI,WAFnB,EAEgCL,cAAc,CAACM,OAF/C,EAGKF,GAHL,CAGS,WAHT,EAGsBH,IAAI,CAACI,WAH3B,EAGwCL,cAAc,CAACO,UAHvD,EAIKC,KAJL,CAIW,0BAJX,EAIuCP,IAAI,CAACI,WAJ5C,EAIyDL,cAAc,CAACS,cAJxE,EAKKC,IALL,CAKU,SALV,EAKqBT,IAAI,CAACI,WAL1B,EAKuCJ,IAAI,CAACU,SAL5C,EAKuDX,cAAc,CAACY,UALtE,EAMKF,IANL,CAMU,QANV,EAMoBV,cAAc,CAACa,KANnC;AAQAC,MAAM,CAACC,OAAP,GAAiBjB,KAAjB",
      "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/routers",
      "sourcesContent": [
        "const express = require('express');\nconst Route = express.Router();\nconst userController = require('../controllers/user')\nconst Auth = require('../helpers/auth')\n\nRoute\n    .all('/*', Auth.authInfo)\n    .get('/', Auth.accesstoken, userController.getUser)\n    .get('/:id_user', Auth.accesstoken, userController.userDetail)\n    .patch('/updatepassword/:id_user', Auth.accesstoken, userController.updatePassword)\n    .post('/insert', Auth.accesstoken, Auth.authadmin, userController.insertUser)\n    .post('/login', userController.login)\n\nmodule.exports = Route;"
      ]
    },
    "sourceType": "module",
    "mtime": 1570526219442
  },
  "{\"sourceRoot\":\"/home/risano/PROJECTJS/NODEJS/Jeager/src/controllers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"filename\":\"/home/risano/PROJECTJS/NODEJS/Jeager/src/controllers/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"plugins\":[],\"presets\":[]}:7.6.2:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/controllers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "filename": "/home/risano/PROJECTJS/NODEJS/Jeager/src/controllers/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/risano/PROJECTJS/NODEJS/Jeager/src/controllers/user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/risano/PROJECTJS/NODEJS/Jeager/src/controllers/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/controllers",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "const userModels = require('../models/user');\n\nconst MiscHelper = require('../helpers/helpers');\n\nconst jwt = require('jsonwebtoken');\n\nconst crypto = require('crypto');\n\nmodule.exports = {\n  getUser: (req, res) => {\n    const search = req.query.search;\n    userModels.getUser(search).then(resultUser => {\n      const result = resultUser;\n      MiscHelper.response(res, result, 200);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  userDetail: (req, res) => {\n    const id_user = req.params.id_user;\n    userModels.userDetail(id_user).then(resultUser => {\n      const result = resultUser;\n      MiscHelper.response(res, result, 200);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  updatePassword: (req, res) => {\n    const id_user = req.params.id_user;\n    console.log(id_user);\n    const salt = MiscHelper.generateSalt(18);\n    const passwordHash = MiscHelper.setPassword(req.body.password, salt);\n    console.log(passwordHash);\n    const data = {\n      password: passwordHash.passwordHash,\n      salt,\n      updated_at: new Date()\n    };\n    userModels.updatePassword(id_user, data).then(resultUpdateUser => {\n      MiscHelper.response(res, resultUpdateUser, 200);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  insertUser: (req, res) => {\n    const salt = MiscHelper.generateSalt(18);\n    const passwordHash = MiscHelper.setPassword(req.body.password, salt);\n    const data = {\n      email: req.body.email,\n      password: passwordHash.passwordHash,\n      fullname: req.body.fullname,\n      salt: passwordHash.salt,\n      token: \"\",\n      role_id: req.body.role_id,\n      created_at: new Date(),\n      updated_at: new Date()\n    };\n    userModels.insertUser(data).then(resultRegister => {\n      MiscHelper.response(res, resultRegister, 201);\n    }).catch(error => {\n      console.log(error);\n    });\n  },\n  login: (req, res) => {\n    const email = req.body.email;\n    const password = req.body.password;\n    userModels.getByEmail(email).then(result => {\n      const dataUser = result[0];\n      const usePassword = MiscHelper.setPassword(password, dataUser.salt).passwordHash;\n\n      if (usePassword === dataUser.password) {\n        dataUser.token = jwt.sign({\n          userid: dataUser.id_user\n        }, process.env.SECRET_KEY, {\n          expiresIn: '1h'\n        }); // dataUser.token += \" role1\";\n\n        if (dataUser.role_id === 1) {\n          console.log(dataUser.role_id);\n          dataUser.token += ` ${crypto.createHmac('sha1', 'role1').digest('hex')}`;\n        }\n\n        delete dataUser.salt;\n        delete dataUser.password;\n        return MiscHelper.response(res, dataUser, 200);\n      } else {\n        return MiscHelper.response(res, null, 403, 'Wrong password !');\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "userModels",
        "require",
        "MiscHelper",
        "jwt",
        "crypto",
        "module",
        "exports",
        "getUser",
        "req",
        "res",
        "search",
        "query",
        "then",
        "resultUser",
        "result",
        "response",
        "catch",
        "error",
        "console",
        "log",
        "userDetail",
        "id_user",
        "params",
        "updatePassword",
        "salt",
        "generateSalt",
        "passwordHash",
        "setPassword",
        "body",
        "password",
        "data",
        "updated_at",
        "Date",
        "resultUpdateUser",
        "insertUser",
        "email",
        "fullname",
        "token",
        "role_id",
        "created_at",
        "resultRegister",
        "login",
        "getByEmail",
        "dataUser",
        "usePassword",
        "sign",
        "userid",
        "process",
        "env",
        "SECRET_KEY",
        "expiresIn",
        "createHmac",
        "digest"
      ],
      "mappings": "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",
      "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/controllers",
      "sourcesContent": [
        "const userModels = require('../models/user')\nconst MiscHelper = require('../helpers/helpers')\nconst jwt = require('jsonwebtoken')\nconst crypto = require('crypto')\n\nmodule.exports = {\n    getUser: (req, res) => {\n        const search = req.query.search\n        userModels.getUser(search)\n            .then((resultUser) => {\n                const result = resultUser\n                MiscHelper.response(res, result, 200)\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    },\n    userDetail: (req, res) => {\n        const id_user = req.params.id_user\n        userModels.userDetail(id_user)\n            .then((resultUser) => {\n                const result = resultUser\n                MiscHelper.response(res, result, 200)\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    },\n    updatePassword: (req, res) => {\n        const id_user = req.params.id_user\n        console.log(id_user)\n        const salt = MiscHelper.generateSalt(18)\n        const passwordHash = MiscHelper.setPassword(req.body.password, salt)\n        console.log(passwordHash)\n        const data = {\n            password: passwordHash.passwordHash,\n            salt,\n            updated_at: new Date()\n        }\n        userModels.updatePassword(id_user, data)\n            .then((resultUpdateUser) => {\n                MiscHelper.response(res, resultUpdateUser, 200)\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    },\n    insertUser: (req, res) => {\n        const salt = MiscHelper.generateSalt(18)\n        const passwordHash = MiscHelper.setPassword(req.body.password, salt)\n        const data = {\n            email: req.body.email,\n            password: passwordHash.passwordHash,\n            fullname: req.body.fullname,\n            salt: passwordHash.salt,\n            token: \"\",\n            role_id: req.body.role_id,\n            created_at: new Date(),\n            updated_at: new Date()\n        }\n        userModels.insertUser(data)\n            .then((resultRegister) => {\n                MiscHelper.response(res, resultRegister, 201)\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    },\n    login: (req, res) => {\n        const email = req.body.email\n        const password = req.body.password\n        userModels.getByEmail(email)\n            .then((result) => {\n                const dataUser = result[0]\n                const usePassword = MiscHelper.setPassword(password, dataUser.salt).passwordHash\n                if (usePassword === dataUser.password) {\n                    dataUser.token = jwt.sign({\n                        userid: dataUser.id_user\n                    }, process.env.SECRET_KEY, { expiresIn: '1h' });\n                    // dataUser.token += \" role1\";\n                    if (dataUser.role_id === 1) {\n                        console.log(dataUser.role_id)\n                        dataUser.token += ` ${crypto.createHmac('sha1', 'role1').digest('hex')}`\n                    }\n\n                    delete dataUser.salt\n                    delete dataUser.password\n                    return MiscHelper.response(res, dataUser, 200)\n                } else {\n                    return MiscHelper.response(res, null, 403, 'Wrong password !')\n                }\n            })\n            .catch((error) => {\n                console.log(error)\n            })\n    },\n}\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1570530352748
  },
  "{\"sourceRoot\":\"/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"filename\":\"/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers/auth.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"plugins\":[],\"presets\":[]}:7.6.2:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "filename": "/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers/auth.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers/auth.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers/auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "const jwt = require('jsonwebtoken');\n\nconst MiscHelper = require('../helpers/helpers');\n\nconst allowedAccess = process.env.REQUEST_HEADERS;\nmodule.exports = {\n  authInfo: (req, res, next) => {\n    const headerAuth = req.headers['authorization'];\n    const headerSecret = req.headers['x-access-token'];\n\n    if (headerAuth !== allowedAccess) {\n      return MiscHelper.response(res, null, 401, 'Unauthorized, Need access token !');\n    } else if (typeof headerSecret === 'undefined') {\n      next();\n    } else {\n      const bearerToken = headerSecret.split(' ');\n      const token = bearerToken[1];\n      let authadmin = null;\n\n      if (bearerToken[2]) {\n        authadmin = bearerToken[2];\n      }\n\n      req.token = token;\n      req.authadmin = authadmin;\n      console.log('Token stored ! ' + token);\n      next();\n    }\n  },\n  accesstoken: (req, res, next) => {\n    const secretKey = process.env.SECRET_KEY;\n    const accessToken = req.token;\n    const userToken = req.headers['x-control-user'];\n    console.log(accessToken);\n    jwt.verify(accessToken, secretKey, (err, decoded) => {\n      console.log(userToken);\n      if (err && err.name === 'TokenExpiredError') return MiscHelper.response(res, null, 401, 'Token Expired');\n      if (err && err.name === 'JsonWebTokenError') return MiscHelper.response(res, null, 401, 'Invalid Token');\n      if (parseInt(userToken) !== parseInt(decoded.userid)) return MiscHelper.response(res, null, 401, 'Invalid User Token');\n      console.log(decoded);\n      next();\n    });\n  },\n  authadmin: (req, res, next) => {\n    if (req.authadmin !== crypto.createHmac('sha1', 'role1').digest('hex')) {\n      return MiscHelper.response(res, null, 401, 'admin can only create user');\n    }\n\n    next();\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsIk1pc2NIZWxwZXIiLCJhbGxvd2VkQWNjZXNzIiwicHJvY2VzcyIsImVudiIsIlJFUVVFU1RfSEVBREVSUyIsIm1vZHVsZSIsImV4cG9ydHMiLCJhdXRoSW5mbyIsInJlcSIsInJlcyIsIm5leHQiLCJoZWFkZXJBdXRoIiwiaGVhZGVycyIsImhlYWRlclNlY3JldCIsInJlc3BvbnNlIiwiYmVhcmVyVG9rZW4iLCJzcGxpdCIsInRva2VuIiwiYXV0aGFkbWluIiwiY29uc29sZSIsImxvZyIsImFjY2Vzc3Rva2VuIiwic2VjcmV0S2V5IiwiU0VDUkVUX0tFWSIsImFjY2Vzc1Rva2VuIiwidXNlclRva2VuIiwidmVyaWZ5IiwiZXJyIiwiZGVjb2RlZCIsIm5hbWUiLCJwYXJzZUludCIsInVzZXJpZCIsImNyeXB0byIsImNyZWF0ZUhtYWMiLCJkaWdlc3QiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBR0MsT0FBTyxDQUFDLGNBQUQsQ0FBbkI7O0FBQ0EsTUFBTUMsVUFBVSxHQUFHRCxPQUFPLENBQUMsb0JBQUQsQ0FBMUI7O0FBRUEsTUFBTUUsYUFBYSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsZUFBbEM7QUFFQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLFFBQVEsRUFBRSxDQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUMxQixVQUFNQyxVQUFVLEdBQUdILEdBQUcsQ0FBQ0ksT0FBSixDQUFZLGVBQVosQ0FBbkI7QUFDQSxVQUFNQyxZQUFZLEdBQUdMLEdBQUcsQ0FBQ0ksT0FBSixDQUFZLGdCQUFaLENBQXJCOztBQUNBLFFBQUlELFVBQVUsS0FBS1YsYUFBbkIsRUFBa0M7QUFDOUIsYUFBT0QsVUFBVSxDQUFDYyxRQUFYLENBQW9CTCxHQUFwQixFQUF5QixJQUF6QixFQUErQixHQUEvQixFQUFvQyxtQ0FBcEMsQ0FBUDtBQUNILEtBRkQsTUFFTyxJQUFJLE9BQU9JLFlBQVAsS0FBd0IsV0FBNUIsRUFBeUM7QUFDNUNILE1BQUFBLElBQUk7QUFDUCxLQUZNLE1BRUE7QUFDSCxZQUFNSyxXQUFXLEdBQUdGLFlBQVksQ0FBQ0csS0FBYixDQUFtQixHQUFuQixDQUFwQjtBQUNBLFlBQU1DLEtBQUssR0FBR0YsV0FBVyxDQUFDLENBQUQsQ0FBekI7QUFDQSxVQUFJRyxTQUFTLEdBQUcsSUFBaEI7O0FBQ0EsVUFBSUgsV0FBVyxDQUFDLENBQUQsQ0FBZixFQUFvQjtBQUNoQkcsUUFBQUEsU0FBUyxHQUFHSCxXQUFXLENBQUMsQ0FBRCxDQUF2QjtBQUNIOztBQUdEUCxNQUFBQSxHQUFHLENBQUNTLEtBQUosR0FBWUEsS0FBWjtBQUNBVCxNQUFBQSxHQUFHLENBQUNVLFNBQUosR0FBZ0JBLFNBQWhCO0FBQ0FDLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLG9CQUFvQkgsS0FBaEM7QUFDQVAsTUFBQUEsSUFBSTtBQUNQO0FBQ0osR0F0Qlk7QUF1QmJXLEVBQUFBLFdBQVcsRUFBRSxDQUFDYixHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxLQUFvQjtBQUM3QixVQUFNWSxTQUFTLEdBQUdwQixPQUFPLENBQUNDLEdBQVIsQ0FBWW9CLFVBQTlCO0FBQ0EsVUFBTUMsV0FBVyxHQUFHaEIsR0FBRyxDQUFDUyxLQUF4QjtBQUNBLFVBQU1RLFNBQVMsR0FBR2pCLEdBQUcsQ0FBQ0ksT0FBSixDQUFZLGdCQUFaLENBQWxCO0FBQ0FPLElBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZSSxXQUFaO0FBQ0ExQixJQUFBQSxHQUFHLENBQUM0QixNQUFKLENBQVdGLFdBQVgsRUFBd0JGLFNBQXhCLEVBQW1DLENBQUNLLEdBQUQsRUFBTUMsT0FBTixLQUFrQjtBQUNqRFQsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlLLFNBQVo7QUFDQSxVQUFJRSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0UsSUFBSixLQUFhLG1CQUF4QixFQUE2QyxPQUFPN0IsVUFBVSxDQUFDYyxRQUFYLENBQW9CTCxHQUFwQixFQUF5QixJQUF6QixFQUErQixHQUEvQixFQUFvQyxlQUFwQyxDQUFQO0FBQzdDLFVBQUlrQixHQUFHLElBQUlBLEdBQUcsQ0FBQ0UsSUFBSixLQUFhLG1CQUF4QixFQUE2QyxPQUFPN0IsVUFBVSxDQUFDYyxRQUFYLENBQW9CTCxHQUFwQixFQUF5QixJQUF6QixFQUErQixHQUEvQixFQUFvQyxlQUFwQyxDQUFQO0FBQzdDLFVBQUlxQixRQUFRLENBQUNMLFNBQUQsQ0FBUixLQUF3QkssUUFBUSxDQUFDRixPQUFPLENBQUNHLE1BQVQsQ0FBcEMsRUFBc0QsT0FBTy9CLFVBQVUsQ0FBQ2MsUUFBWCxDQUFvQkwsR0FBcEIsRUFBeUIsSUFBekIsRUFBK0IsR0FBL0IsRUFBb0Msb0JBQXBDLENBQVA7QUFDdERVLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUSxPQUFaO0FBQ0FsQixNQUFBQSxJQUFJO0FBQ1AsS0FQRDtBQVFILEdBcENZO0FBcUNiUSxFQUFBQSxTQUFTLEVBQUUsQ0FBQ1YsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDM0IsUUFBSUYsR0FBRyxDQUFDVSxTQUFKLEtBQWtCYyxNQUFNLENBQUNDLFVBQVAsQ0FBa0IsTUFBbEIsRUFBMEIsT0FBMUIsRUFBbUNDLE1BQW5DLENBQTBDLEtBQTFDLENBQXRCLEVBQXdFO0FBQ3BFLGFBQU9sQyxVQUFVLENBQUNjLFFBQVgsQ0FBb0JMLEdBQXBCLEVBQXlCLElBQXpCLEVBQStCLEdBQS9CLEVBQW9DLDRCQUFwQyxDQUFQO0FBQ0g7O0FBQ0RDLElBQUFBLElBQUk7QUFDUDtBQTFDWSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9yaXNhbm8vUFJPSkVDVEpTL05PREVKUy9KZWFnZXIvc3JjL2hlbHBlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBqd3QgPSByZXF1aXJlKCdqc29ud2VidG9rZW4nKTtcbmNvbnN0IE1pc2NIZWxwZXIgPSByZXF1aXJlKCcuLi9oZWxwZXJzL2hlbHBlcnMnKVxuXG5jb25zdCBhbGxvd2VkQWNjZXNzID0gcHJvY2Vzcy5lbnYuUkVRVUVTVF9IRUFERVJTXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGF1dGhJbmZvOiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAgICAgY29uc3QgaGVhZGVyQXV0aCA9IHJlcS5oZWFkZXJzWydhdXRob3JpemF0aW9uJ11cbiAgICAgICAgY29uc3QgaGVhZGVyU2VjcmV0ID0gcmVxLmhlYWRlcnNbJ3gtYWNjZXNzLXRva2VuJ11cbiAgICAgICAgaWYgKGhlYWRlckF1dGggIT09IGFsbG93ZWRBY2Nlc3MpIHtcbiAgICAgICAgICAgIHJldHVybiBNaXNjSGVscGVyLnJlc3BvbnNlKHJlcywgbnVsbCwgNDAxLCAnVW5hdXRob3JpemVkLCBOZWVkIGFjY2VzcyB0b2tlbiAhJylcbiAgICAgICAgfSBlbHNlIGlmICh0eXBlb2YgaGVhZGVyU2VjcmV0ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgbmV4dCgpXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBiZWFyZXJUb2tlbiA9IGhlYWRlclNlY3JldC5zcGxpdCgnICcpXG4gICAgICAgICAgICBjb25zdCB0b2tlbiA9IGJlYXJlclRva2VuWzFdXG4gICAgICAgICAgICBsZXQgYXV0aGFkbWluID0gbnVsbFxuICAgICAgICAgICAgaWYgKGJlYXJlclRva2VuWzJdKSB7XG4gICAgICAgICAgICAgICAgYXV0aGFkbWluID0gYmVhcmVyVG9rZW5bMl1cbiAgICAgICAgICAgIH1cblxuXG4gICAgICAgICAgICByZXEudG9rZW4gPSB0b2tlblxuICAgICAgICAgICAgcmVxLmF1dGhhZG1pbiA9IGF1dGhhZG1pblxuICAgICAgICAgICAgY29uc29sZS5sb2coJ1Rva2VuIHN0b3JlZCAhICcgKyB0b2tlbilcbiAgICAgICAgICAgIG5leHQoKVxuICAgICAgICB9XG4gICAgfSxcbiAgICBhY2Nlc3N0b2tlbjogKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgICAgIGNvbnN0IHNlY3JldEtleSA9IHByb2Nlc3MuZW52LlNFQ1JFVF9LRVlcbiAgICAgICAgY29uc3QgYWNjZXNzVG9rZW4gPSByZXEudG9rZW5cbiAgICAgICAgY29uc3QgdXNlclRva2VuID0gcmVxLmhlYWRlcnNbJ3gtY29udHJvbC11c2VyJ11cbiAgICAgICAgY29uc29sZS5sb2coYWNjZXNzVG9rZW4pO1xuICAgICAgICBqd3QudmVyaWZ5KGFjY2Vzc1Rva2VuLCBzZWNyZXRLZXksIChlcnIsIGRlY29kZWQpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHVzZXJUb2tlbik7XG4gICAgICAgICAgICBpZiAoZXJyICYmIGVyci5uYW1lID09PSAnVG9rZW5FeHBpcmVkRXJyb3InKSByZXR1cm4gTWlzY0hlbHBlci5yZXNwb25zZShyZXMsIG51bGwsIDQwMSwgJ1Rva2VuIEV4cGlyZWQnKVxuICAgICAgICAgICAgaWYgKGVyciAmJiBlcnIubmFtZSA9PT0gJ0pzb25XZWJUb2tlbkVycm9yJykgcmV0dXJuIE1pc2NIZWxwZXIucmVzcG9uc2UocmVzLCBudWxsLCA0MDEsICdJbnZhbGlkIFRva2VuJylcbiAgICAgICAgICAgIGlmIChwYXJzZUludCh1c2VyVG9rZW4pICE9PSBwYXJzZUludChkZWNvZGVkLnVzZXJpZCkpIHJldHVybiBNaXNjSGVscGVyLnJlc3BvbnNlKHJlcywgbnVsbCwgNDAxLCAnSW52YWxpZCBVc2VyIFRva2VuJylcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGRlY29kZWQpXG4gICAgICAgICAgICBuZXh0KClcbiAgICAgICAgfSlcbiAgICB9LFxuICAgIGF1dGhhZG1pbjogKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgICAgIGlmIChyZXEuYXV0aGFkbWluICE9PSBjcnlwdG8uY3JlYXRlSG1hYygnc2hhMScsICdyb2xlMScpLmRpZ2VzdCgnaGV4JykpIHtcbiAgICAgICAgICAgIHJldHVybiBNaXNjSGVscGVyLnJlc3BvbnNlKHJlcywgbnVsbCwgNDAxLCAnYWRtaW4gY2FuIG9ubHkgY3JlYXRlIHVzZXInKVxuICAgICAgICB9XG4gICAgICAgIG5leHQoKVxuICAgIH1cbn1cbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "jwt",
        "require",
        "MiscHelper",
        "allowedAccess",
        "process",
        "env",
        "REQUEST_HEADERS",
        "module",
        "exports",
        "authInfo",
        "req",
        "res",
        "next",
        "headerAuth",
        "headers",
        "headerSecret",
        "response",
        "bearerToken",
        "split",
        "token",
        "authadmin",
        "console",
        "log",
        "accesstoken",
        "secretKey",
        "SECRET_KEY",
        "accessToken",
        "userToken",
        "verify",
        "err",
        "decoded",
        "name",
        "parseInt",
        "userid",
        "crypto",
        "createHmac",
        "digest"
      ],
      "mappings": "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",
      "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers",
      "sourcesContent": [
        "const jwt = require('jsonwebtoken');\nconst MiscHelper = require('../helpers/helpers')\n\nconst allowedAccess = process.env.REQUEST_HEADERS\n\nmodule.exports = {\n    authInfo: (req, res, next) => {\n        const headerAuth = req.headers['authorization']\n        const headerSecret = req.headers['x-access-token']\n        if (headerAuth !== allowedAccess) {\n            return MiscHelper.response(res, null, 401, 'Unauthorized, Need access token !')\n        } else if (typeof headerSecret === 'undefined') {\n            next()\n        } else {\n            const bearerToken = headerSecret.split(' ')\n            const token = bearerToken[1]\n            let authadmin = null\n            if (bearerToken[2]) {\n                authadmin = bearerToken[2]\n            }\n\n\n            req.token = token\n            req.authadmin = authadmin\n            console.log('Token stored ! ' + token)\n            next()\n        }\n    },\n    accesstoken: (req, res, next) => {\n        const secretKey = process.env.SECRET_KEY\n        const accessToken = req.token\n        const userToken = req.headers['x-control-user']\n        console.log(accessToken);\n        jwt.verify(accessToken, secretKey, (err, decoded) => {\n            console.log(userToken);\n            if (err && err.name === 'TokenExpiredError') return MiscHelper.response(res, null, 401, 'Token Expired')\n            if (err && err.name === 'JsonWebTokenError') return MiscHelper.response(res, null, 401, 'Invalid Token')\n            if (parseInt(userToken) !== parseInt(decoded.userid)) return MiscHelper.response(res, null, 401, 'Invalid User Token')\n            console.log(decoded)\n            next()\n        })\n    },\n    authadmin: (req, res, next) => {\n        if (req.authadmin !== crypto.createHmac('sha1', 'role1').digest('hex')) {\n            return MiscHelper.response(res, null, 401, 'admin can only create user')\n        }\n        next()\n    }\n}\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1570530416305
  },
  "{\"sourceRoot\":\"/home/risano/PROJECTJS/NODEJS/Jeager/src/models\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"filename\":\"/home/risano/PROJECTJS/NODEJS/Jeager/src/models/user.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"plugins\":[],\"presets\":[]}:7.6.2:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/models",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "filename": "/home/risano/PROJECTJS/NODEJS/Jeager/src/models/user.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/risano/PROJECTJS/NODEJS/Jeager/src/models/user.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/risano/PROJECTJS/NODEJS/Jeager/src/models/user.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/models",
        "sourceFileName": "user.js"
      }
    },
    "ast": null,
    "code": "require('dotenv').config();\n\nconst connection = require('../configs/db');\n\nmodule.exports = {\n  getUser: search => {\n    return new Promise((resolve, reject) => {\n      connection.query(\"SELECT users.*, role.role_name FROM users INNER JOIN role ON users.role_id = role.id\", (err, result) => {\n        if (!err) {\n          resolve(result);\n        } else {\n          reject(new Error(err));\n        }\n      });\n    });\n  },\n  userDetail: id_user => {\n    return new Promise((resolve, reject) => {\n      connection.query(\"SELECT * FROM users WHERE id_user = ?\", id_user, (err, result) => {\n        if (!err) {\n          resolve(result);\n        } else {\n          reject(new Error(err));\n        }\n      });\n    });\n  },\n  insertUser: data => {\n    return new Promise((resolve, reject) => {\n      connection.query('INSERT INTO users SET ?', data, (err, result) => {\n        if (!err) {\n          resolve(result);\n        } else {\n          reject(err);\n        }\n      });\n    });\n  },\n  getByEmail: email => {\n    return new Promise((resolve, reject) => {\n      connection.query('SELECT * FROM users WHERE email = ?', email, (err, result) => {\n        if (!err) {\n          resolve(result);\n        } else {\n          reject(new Error(err));\n        }\n      });\n    });\n  },\n  updatePassword: (id_user, data) => {\n    console.log(id_user);\n    return new Promise((resolve, reject) => {\n      connection.query(\"UPDATE users SET ? WHERE id_user =?\", [data, id_user], (err, result) => {\n        if (!err) {\n          resolve(result);\n        } else {\n          reject(new Error(err));\n        }\n      });\n    });\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzZXIuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsImNvbmZpZyIsImNvbm5lY3Rpb24iLCJtb2R1bGUiLCJleHBvcnRzIiwiZ2V0VXNlciIsInNlYXJjaCIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwicXVlcnkiLCJlcnIiLCJyZXN1bHQiLCJFcnJvciIsInVzZXJEZXRhaWwiLCJpZF91c2VyIiwiaW5zZXJ0VXNlciIsImRhdGEiLCJnZXRCeUVtYWlsIiwiZW1haWwiLCJ1cGRhdGVQYXNzd29yZCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBQSxPQUFPLENBQUMsUUFBRCxDQUFQLENBQWtCQyxNQUFsQjs7QUFDQSxNQUFNQyxVQUFVLEdBQUdGLE9BQU8sQ0FBQyxlQUFELENBQTFCOztBQUVBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDYkMsRUFBQUEsT0FBTyxFQUFHQyxNQUFELElBQVk7QUFDakIsV0FBTyxJQUFJQyxPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3BDUCxNQUFBQSxVQUFVLENBQUNRLEtBQVgsQ0FBaUIsc0ZBQWpCLEVBQXlHLENBQUNDLEdBQUQsRUFBTUMsTUFBTixLQUFpQjtBQUN0SCxZQUFJLENBQUNELEdBQUwsRUFBVTtBQUNOSCxVQUFBQSxPQUFPLENBQUNJLE1BQUQsQ0FBUDtBQUNILFNBRkQsTUFFTztBQUNISCxVQUFBQSxNQUFNLENBQUMsSUFBSUksS0FBSixDQUFVRixHQUFWLENBQUQsQ0FBTjtBQUNIO0FBQ0osT0FORDtBQU9ILEtBUk0sQ0FBUDtBQVNILEdBWFk7QUFZYkcsRUFBQUEsVUFBVSxFQUFHQyxPQUFELElBQWE7QUFDckIsV0FBTyxJQUFJUixPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3BDUCxNQUFBQSxVQUFVLENBQUNRLEtBQVgsQ0FBaUIsdUNBQWpCLEVBQTBESyxPQUExRCxFQUFtRSxDQUFDSixHQUFELEVBQU1DLE1BQU4sS0FBaUI7QUFDaEYsWUFBSSxDQUFDRCxHQUFMLEVBQVU7QUFDTkgsVUFBQUEsT0FBTyxDQUFDSSxNQUFELENBQVA7QUFDSCxTQUZELE1BRU87QUFDSEgsVUFBQUEsTUFBTSxDQUFDLElBQUlJLEtBQUosQ0FBVUYsR0FBVixDQUFELENBQU47QUFDSDtBQUNKLE9BTkQ7QUFPSCxLQVJNLENBQVA7QUFTSCxHQXRCWTtBQXVCYkssRUFBQUEsVUFBVSxFQUFHQyxJQUFELElBQVU7QUFDbEIsV0FBTyxJQUFJVixPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3BDUCxNQUFBQSxVQUFVLENBQUNRLEtBQVgsQ0FBaUIseUJBQWpCLEVBQTRDTyxJQUE1QyxFQUFrRCxDQUFDTixHQUFELEVBQU1DLE1BQU4sS0FBaUI7QUFDL0QsWUFBSSxDQUFDRCxHQUFMLEVBQVU7QUFDTkgsVUFBQUEsT0FBTyxDQUFDSSxNQUFELENBQVA7QUFDSCxTQUZELE1BRU87QUFDSEgsVUFBQUEsTUFBTSxDQUFDRSxHQUFELENBQU47QUFDSDtBQUNKLE9BTkQ7QUFPSCxLQVJNLENBQVA7QUFTSCxHQWpDWTtBQW1DYk8sRUFBQUEsVUFBVSxFQUFHQyxLQUFELElBQVc7QUFDbkIsV0FBTyxJQUFJWixPQUFKLENBQVksQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLEtBQXFCO0FBQ3BDUCxNQUFBQSxVQUFVLENBQUNRLEtBQVgsQ0FBaUIscUNBQWpCLEVBQXdEUyxLQUF4RCxFQUErRCxDQUFDUixHQUFELEVBQU1DLE1BQU4sS0FBaUI7QUFDNUUsWUFBSSxDQUFDRCxHQUFMLEVBQVU7QUFDTkgsVUFBQUEsT0FBTyxDQUFDSSxNQUFELENBQVA7QUFDSCxTQUZELE1BRU87QUFDSEgsVUFBQUEsTUFBTSxDQUFDLElBQUlJLEtBQUosQ0FBVUYsR0FBVixDQUFELENBQU47QUFDSDtBQUNKLE9BTkQ7QUFPSCxLQVJNLENBQVA7QUFTSCxHQTdDWTtBQThDYlMsRUFBQUEsY0FBYyxFQUFFLENBQUNMLE9BQUQsRUFBVUUsSUFBVixLQUFtQjtBQUMvQkksSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlQLE9BQVo7QUFDQSxXQUFPLElBQUlSLE9BQUosQ0FBWSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsS0FBcUI7QUFDcENQLE1BQUFBLFVBQVUsQ0FBQ1EsS0FBWCxDQUFpQixxQ0FBakIsRUFBd0QsQ0FBQ08sSUFBRCxFQUFPRixPQUFQLENBQXhELEVBQXlFLENBQUNKLEdBQUQsRUFBTUMsTUFBTixLQUFpQjtBQUN0RixZQUFJLENBQUNELEdBQUwsRUFBVTtBQUNOSCxVQUFBQSxPQUFPLENBQUNJLE1BQUQsQ0FBUDtBQUNILFNBRkQsTUFFTztBQUNISCxVQUFBQSxNQUFNLENBQUMsSUFBSUksS0FBSixDQUFVRixHQUFWLENBQUQsQ0FBTjtBQUNIO0FBQ0osT0FORDtBQU9ILEtBUk0sQ0FBUDtBQVNIO0FBekRZLENBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3Jpc2Fuby9QUk9KRUNUSlMvTk9ERUpTL0plYWdlci9zcmMvbW9kZWxzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnZG90ZW52JykuY29uZmlnKClcbmNvbnN0IGNvbm5lY3Rpb24gPSByZXF1aXJlKCcuLi9jb25maWdzL2RiJylcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZ2V0VXNlcjogKHNlYXJjaCkgPT4ge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgY29ubmVjdGlvbi5xdWVyeShcIlNFTEVDVCB1c2Vycy4qLCByb2xlLnJvbGVfbmFtZSBGUk9NIHVzZXJzIElOTkVSIEpPSU4gcm9sZSBPTiB1c2Vycy5yb2xlX2lkID0gcm9sZS5pZFwiLCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3VsdClcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGVycikpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICB9LFxuICAgIHVzZXJEZXRhaWw6IChpZF91c2VyKSA9PiB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KFwiU0VMRUNUICogRlJPTSB1c2VycyBXSEVSRSBpZF91c2VyID0gP1wiLCBpZF91c2VyLCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3VsdClcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGVycikpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICB9LFxuICAgIGluc2VydFVzZXI6IChkYXRhKSA9PiB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KCdJTlNFUlQgSU5UTyB1c2VycyBTRVQgPycsIGRhdGEsIChlcnIsIHJlc3VsdCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmICghZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJlc29sdmUocmVzdWx0KVxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIHJlamVjdChlcnIpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICB9LFxuXG4gICAgZ2V0QnlFbWFpbDogKGVtYWlsKSA9PiB7XG4gICAgICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7XG4gICAgICAgICAgICBjb25uZWN0aW9uLnF1ZXJ5KCdTRUxFQ1QgKiBGUk9NIHVzZXJzIFdIRVJFIGVtYWlsID0gPycsIGVtYWlsLCAoZXJyLCByZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIWVycikge1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKHJlc3VsdClcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKGVycikpXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSlcbiAgICB9LFxuICAgIHVwZGF0ZVBhc3N3b3JkOiAoaWRfdXNlciwgZGF0YSkgPT4ge1xuICAgICAgICBjb25zb2xlLmxvZyhpZF91c2VyKVxuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgY29ubmVjdGlvbi5xdWVyeShcIlVQREFURSB1c2VycyBTRVQgPyBXSEVSRSBpZF91c2VyID0/XCIsIFtkYXRhLCBpZF91c2VyXSwgKGVyciwgcmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKCFlcnIpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShyZXN1bHQpXG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcihlcnIpKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pXG4gICAgfSxcbn0iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "user.js"
      ],
      "names": [
        "require",
        "config",
        "connection",
        "module",
        "exports",
        "getUser",
        "search",
        "Promise",
        "resolve",
        "reject",
        "query",
        "err",
        "result",
        "Error",
        "userDetail",
        "id_user",
        "insertUser",
        "data",
        "getByEmail",
        "email",
        "updatePassword",
        "console",
        "log"
      ],
      "mappings": "AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,UAAU,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,OAAO,EAAGC,MAAD,IAAY;AACjB,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCP,MAAAA,UAAU,CAACQ,KAAX,CAAiB,sFAAjB,EAAyG,CAACC,GAAD,EAAMC,MAAN,KAAiB;AACtH,YAAI,CAACD,GAAL,EAAU;AACNH,UAAAA,OAAO,CAACI,MAAD,CAAP;AACH,SAFD,MAEO;AACHH,UAAAA,MAAM,CAAC,IAAII,KAAJ,CAAUF,GAAV,CAAD,CAAN;AACH;AACJ,OAND;AAOH,KARM,CAAP;AASH,GAXY;AAYbG,EAAAA,UAAU,EAAGC,OAAD,IAAa;AACrB,WAAO,IAAIR,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCP,MAAAA,UAAU,CAACQ,KAAX,CAAiB,uCAAjB,EAA0DK,OAA1D,EAAmE,CAACJ,GAAD,EAAMC,MAAN,KAAiB;AAChF,YAAI,CAACD,GAAL,EAAU;AACNH,UAAAA,OAAO,CAACI,MAAD,CAAP;AACH,SAFD,MAEO;AACHH,UAAAA,MAAM,CAAC,IAAII,KAAJ,CAAUF,GAAV,CAAD,CAAN;AACH;AACJ,OAND;AAOH,KARM,CAAP;AASH,GAtBY;AAuBbK,EAAAA,UAAU,EAAGC,IAAD,IAAU;AAClB,WAAO,IAAIV,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCP,MAAAA,UAAU,CAACQ,KAAX,CAAiB,yBAAjB,EAA4CO,IAA5C,EAAkD,CAACN,GAAD,EAAMC,MAAN,KAAiB;AAC/D,YAAI,CAACD,GAAL,EAAU;AACNH,UAAAA,OAAO,CAACI,MAAD,CAAP;AACH,SAFD,MAEO;AACHH,UAAAA,MAAM,CAACE,GAAD,CAAN;AACH;AACJ,OAND;AAOH,KARM,CAAP;AASH,GAjCY;AAmCbO,EAAAA,UAAU,EAAGC,KAAD,IAAW;AACnB,WAAO,IAAIZ,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCP,MAAAA,UAAU,CAACQ,KAAX,CAAiB,qCAAjB,EAAwDS,KAAxD,EAA+D,CAACR,GAAD,EAAMC,MAAN,KAAiB;AAC5E,YAAI,CAACD,GAAL,EAAU;AACNH,UAAAA,OAAO,CAACI,MAAD,CAAP;AACH,SAFD,MAEO;AACHH,UAAAA,MAAM,CAAC,IAAII,KAAJ,CAAUF,GAAV,CAAD,CAAN;AACH;AACJ,OAND;AAOH,KARM,CAAP;AASH,GA7CY;AA8CbS,EAAAA,cAAc,EAAE,CAACL,OAAD,EAAUE,IAAV,KAAmB;AAC/BI,IAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACA,WAAO,IAAIR,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCP,MAAAA,UAAU,CAACQ,KAAX,CAAiB,qCAAjB,EAAwD,CAACO,IAAD,EAAOF,OAAP,CAAxD,EAAyE,CAACJ,GAAD,EAAMC,MAAN,KAAiB;AACtF,YAAI,CAACD,GAAL,EAAU;AACNH,UAAAA,OAAO,CAACI,MAAD,CAAP;AACH,SAFD,MAEO;AACHH,UAAAA,MAAM,CAAC,IAAII,KAAJ,CAAUF,GAAV,CAAD,CAAN;AACH;AACJ,OAND;AAOH,KARM,CAAP;AASH;AAzDY,CAAjB",
      "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/models",
      "sourcesContent": [
        "require('dotenv').config()\nconst connection = require('../configs/db')\n\nmodule.exports = {\n    getUser: (search) => {\n        return new Promise((resolve, reject) => {\n            connection.query(\"SELECT users.*, role.role_name FROM users INNER JOIN role ON users.role_id = role.id\", (err, result) => {\n                if (!err) {\n                    resolve(result)\n                } else {\n                    reject(new Error(err))\n                }\n            })\n        })\n    },\n    userDetail: (id_user) => {\n        return new Promise((resolve, reject) => {\n            connection.query(\"SELECT * FROM users WHERE id_user = ?\", id_user, (err, result) => {\n                if (!err) {\n                    resolve(result)\n                } else {\n                    reject(new Error(err))\n                }\n            })\n        })\n    },\n    insertUser: (data) => {\n        return new Promise((resolve, reject) => {\n            connection.query('INSERT INTO users SET ?', data, (err, result) => {\n                if (!err) {\n                    resolve(result)\n                } else {\n                    reject(err)\n                }\n            })\n        })\n    },\n\n    getByEmail: (email) => {\n        return new Promise((resolve, reject) => {\n            connection.query('SELECT * FROM users WHERE email = ?', email, (err, result) => {\n                if (!err) {\n                    resolve(result)\n                } else {\n                    reject(new Error(err))\n                }\n            })\n        })\n    },\n    updatePassword: (id_user, data) => {\n        console.log(id_user)\n        return new Promise((resolve, reject) => {\n            connection.query(\"UPDATE users SET ? WHERE id_user =?\", [data, id_user], (err, result) => {\n                if (!err) {\n                    resolve(result)\n                } else {\n                    reject(new Error(err))\n                }\n            })\n        })\n    },\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1570518468617
  },
  "{\"sourceRoot\":\"/home/risano/PROJECTJS/NODEJS/Jeager/src/configs\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"filename\":\"/home/risano/PROJECTJS/NODEJS/Jeager/src/configs/db.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"plugins\":[],\"presets\":[]}:7.6.2:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/configs",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "filename": "/home/risano/PROJECTJS/NODEJS/Jeager/src/configs/db.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/risano/PROJECTJS/NODEJS/Jeager/src/configs/db.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/risano/PROJECTJS/NODEJS/Jeager/src/configs/db.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/configs",
        "sourceFileName": "db.js"
      }
    },
    "ast": null,
    "code": "require('dotenv').config();\n\nconst mysql = require('mysql');\n\nconst connection = mysql.createConnection({\n  host: process.env.DB_HOST,\n  user: process.env.DB_USER,\n  password: process.env.DB_PASSWORD,\n  database: process.env.DB_NAME\n});\nconnection.connect(err => {\n  if (err) console.log(`Error; ${err}`);\n});\nmodule.exports = connection;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRiLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJjb25maWciLCJteXNxbCIsImNvbm5lY3Rpb24iLCJjcmVhdGVDb25uZWN0aW9uIiwiaG9zdCIsInByb2Nlc3MiLCJlbnYiLCJEQl9IT1NUIiwidXNlciIsIkRCX1VTRVIiLCJwYXNzd29yZCIsIkRCX1BBU1NXT1JEIiwiZGF0YWJhc2UiLCJEQl9OQU1FIiwiY29ubmVjdCIsImVyciIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQUEsT0FBTyxDQUFDLFFBQUQsQ0FBUCxDQUFrQkMsTUFBbEI7O0FBQ0EsTUFBTUMsS0FBSyxHQUFHRixPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNRyxVQUFVLEdBQUdELEtBQUssQ0FBQ0UsZ0JBQU4sQ0FBdUI7QUFDdENDLEVBQUFBLElBQUksRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLE9BRG9CO0FBRXRDQyxFQUFBQSxJQUFJLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRyxPQUZvQjtBQUd0Q0MsRUFBQUEsUUFBUSxFQUFFTCxPQUFPLENBQUNDLEdBQVIsQ0FBWUssV0FIZ0I7QUFJdENDLEVBQUFBLFFBQVEsRUFBRVAsT0FBTyxDQUFDQyxHQUFSLENBQVlPO0FBSmdCLENBQXZCLENBQW5CO0FBTUFYLFVBQVUsQ0FBQ1ksT0FBWCxDQUFvQkMsR0FBRCxJQUFTO0FBQ3hCLE1BQUlBLEdBQUosRUFBU0MsT0FBTyxDQUFDQyxHQUFSLENBQWEsVUFBU0YsR0FBSSxFQUExQjtBQUNaLENBRkQ7QUFJQUcsTUFBTSxDQUFDQyxPQUFQLEdBQWlCakIsVUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvcmlzYW5vL1BST0pFQ1RKUy9OT0RFSlMvSmVhZ2VyL3NyYy9jb25maWdzIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnZG90ZW52JykuY29uZmlnKClcbmNvbnN0IG15c3FsID0gcmVxdWlyZSgnbXlzcWwnKVxuY29uc3QgY29ubmVjdGlvbiA9IG15c3FsLmNyZWF0ZUNvbm5lY3Rpb24oe1xuICAgIGhvc3Q6IHByb2Nlc3MuZW52LkRCX0hPU1QsXG4gICAgdXNlcjogcHJvY2Vzcy5lbnYuREJfVVNFUixcbiAgICBwYXNzd29yZDogcHJvY2Vzcy5lbnYuREJfUEFTU1dPUkQsXG4gICAgZGF0YWJhc2U6IHByb2Nlc3MuZW52LkRCX05BTUVcbn0pXG5jb25uZWN0aW9uLmNvbm5lY3QoKGVycikgPT4ge1xuICAgIGlmIChlcnIpIGNvbnNvbGUubG9nKGBFcnJvcjsgJHtlcnJ9YClcbn0pXG5cbm1vZHVsZS5leHBvcnRzID0gY29ubmVjdGlvbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "db.js"
      ],
      "names": [
        "require",
        "config",
        "mysql",
        "connection",
        "createConnection",
        "host",
        "process",
        "env",
        "DB_HOST",
        "user",
        "DB_USER",
        "password",
        "DB_PASSWORD",
        "database",
        "DB_NAME",
        "connect",
        "err",
        "console",
        "log",
        "module",
        "exports"
      ],
      "mappings": "AAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AACA,MAAMC,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMG,UAAU,GAAGD,KAAK,CAACE,gBAAN,CAAuB;AACtCC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,OADoB;AAEtCC,EAAAA,IAAI,EAAEH,OAAO,CAACC,GAAR,CAAYG,OAFoB;AAGtCC,EAAAA,QAAQ,EAAEL,OAAO,CAACC,GAAR,CAAYK,WAHgB;AAItCC,EAAAA,QAAQ,EAAEP,OAAO,CAACC,GAAR,CAAYO;AAJgB,CAAvB,CAAnB;AAMAX,UAAU,CAACY,OAAX,CAAoBC,GAAD,IAAS;AACxB,MAAIA,GAAJ,EAASC,OAAO,CAACC,GAAR,CAAa,UAASF,GAAI,EAA1B;AACZ,CAFD;AAIAG,MAAM,CAACC,OAAP,GAAiBjB,UAAjB",
      "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/configs",
      "sourcesContent": [
        "require('dotenv').config()\nconst mysql = require('mysql')\nconst connection = mysql.createConnection({\n    host: process.env.DB_HOST,\n    user: process.env.DB_USER,\n    password: process.env.DB_PASSWORD,\n    database: process.env.DB_NAME\n})\nconnection.connect((err) => {\n    if (err) console.log(`Error; ${err}`)\n})\n\nmodule.exports = connection"
      ]
    },
    "sourceType": "module",
    "mtime": 1570513211736
  },
  "{\"sourceRoot\":\"/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"filename\":\"/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers/helpers.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/risano/PROJECTJS/NODEJS/Jeager\",\"plugins\":[],\"presets\":[]}:7.6.2:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "filename": "/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers/helpers.js",
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/home/risano/PROJECTJS/NODEJS/Jeager",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers/helpers.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers/helpers.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers",
        "sourceFileName": "helpers.js"
      }
    },
    "ast": null,
    "code": "crypto = require('crypto');\nmodule.exports = {\n  response: (res, result, status, error, rank) => {\n    let resultPrint = {};\n    resultPrint.error = error || null;\n    resultPrint.status_code = status || 200;\n    resultPrint.result = result;\n    return res.status(resultPrint.status_code).json(resultPrint);\n  },\n  generateSalt: length => {\n    return crypto.randomBytes(Math.ceil(length / 2)).toString('hex').slice(0, length);\n  },\n  setPassword: (password, salt) => {\n    let hash = crypto.createHmac('sha512', salt);\n    hash.update(password);\n    let value = hash.digest('hex');\n    return {\n      salt: salt,\n      passwordHash: value\n    };\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImhlbHBlcnMuanMiXSwibmFtZXMiOlsiY3J5cHRvIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXNwb25zZSIsInJlcyIsInJlc3VsdCIsInN0YXR1cyIsImVycm9yIiwicmFuayIsInJlc3VsdFByaW50Iiwic3RhdHVzX2NvZGUiLCJqc29uIiwiZ2VuZXJhdGVTYWx0IiwibGVuZ3RoIiwicmFuZG9tQnl0ZXMiLCJNYXRoIiwiY2VpbCIsInRvU3RyaW5nIiwic2xpY2UiLCJzZXRQYXNzd29yZCIsInBhc3N3b3JkIiwic2FsdCIsImhhc2giLCJjcmVhdGVIbWFjIiwidXBkYXRlIiwidmFsdWUiLCJkaWdlc3QiLCJwYXNzd29yZEhhc2giXSwibWFwcGluZ3MiOiJBQUFBQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQWhCO0FBQ0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxRQUFRLEVBQUUsQ0FBQ0MsR0FBRCxFQUFNQyxNQUFOLEVBQWNDLE1BQWQsRUFBc0JDLEtBQXRCLEVBQTZCQyxJQUE3QixLQUFzQztBQUM1QyxRQUFJQyxXQUFXLEdBQUcsRUFBbEI7QUFDQUEsSUFBQUEsV0FBVyxDQUFDRixLQUFaLEdBQW9CQSxLQUFLLElBQUksSUFBN0I7QUFDQUUsSUFBQUEsV0FBVyxDQUFDQyxXQUFaLEdBQTBCSixNQUFNLElBQUksR0FBcEM7QUFDQUcsSUFBQUEsV0FBVyxDQUFDSixNQUFaLEdBQXFCQSxNQUFyQjtBQUNBLFdBQU9ELEdBQUcsQ0FBQ0UsTUFBSixDQUFXRyxXQUFXLENBQUNDLFdBQXZCLEVBQW9DQyxJQUFwQyxDQUF5Q0YsV0FBekMsQ0FBUDtBQUNILEdBUFk7QUFRYkcsRUFBQUEsWUFBWSxFQUFHQyxNQUFELElBQVk7QUFDdEIsV0FBT2QsTUFBTSxDQUFDZSxXQUFQLENBQW1CQyxJQUFJLENBQUNDLElBQUwsQ0FBVUgsTUFBTSxHQUFHLENBQW5CLENBQW5CLEVBQTBDSSxRQUExQyxDQUFtRCxLQUFuRCxFQUEwREMsS0FBMUQsQ0FBZ0UsQ0FBaEUsRUFBbUVMLE1BQW5FLENBQVA7QUFDSCxHQVZZO0FBV2JNLEVBQUFBLFdBQVcsRUFBRSxDQUFDQyxRQUFELEVBQVdDLElBQVgsS0FBb0I7QUFDN0IsUUFBSUMsSUFBSSxHQUFHdkIsTUFBTSxDQUFDd0IsVUFBUCxDQUFrQixRQUFsQixFQUE0QkYsSUFBNUIsQ0FBWDtBQUNBQyxJQUFBQSxJQUFJLENBQUNFLE1BQUwsQ0FBWUosUUFBWjtBQUNBLFFBQUlLLEtBQUssR0FBR0gsSUFBSSxDQUFDSSxNQUFMLENBQVksS0FBWixDQUFaO0FBQ0EsV0FBTztBQUNITCxNQUFBQSxJQUFJLEVBQUVBLElBREg7QUFFSE0sTUFBQUEsWUFBWSxFQUFFRjtBQUZYLEtBQVA7QUFJSDtBQW5CWSxDQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS9yaXNhbm8vUFJPSkVDVEpTL05PREVKUy9KZWFnZXIvc3JjL2hlbHBlcnMiLCJzb3VyY2VzQ29udGVudCI6WyJjcnlwdG8gPSByZXF1aXJlKCdjcnlwdG8nKTtcbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHJlc3BvbnNlOiAocmVzLCByZXN1bHQsIHN0YXR1cywgZXJyb3IsIHJhbmspID0+IHtcbiAgICAgICAgbGV0IHJlc3VsdFByaW50ID0ge31cbiAgICAgICAgcmVzdWx0UHJpbnQuZXJyb3IgPSBlcnJvciB8fCBudWxsXG4gICAgICAgIHJlc3VsdFByaW50LnN0YXR1c19jb2RlID0gc3RhdHVzIHx8IDIwMFxuICAgICAgICByZXN1bHRQcmludC5yZXN1bHQgPSByZXN1bHRcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMocmVzdWx0UHJpbnQuc3RhdHVzX2NvZGUpLmpzb24ocmVzdWx0UHJpbnQpXG4gICAgfSxcbiAgICBnZW5lcmF0ZVNhbHQ6IChsZW5ndGgpID0+IHtcbiAgICAgICAgcmV0dXJuIGNyeXB0by5yYW5kb21CeXRlcyhNYXRoLmNlaWwobGVuZ3RoIC8gMikpLnRvU3RyaW5nKCdoZXgnKS5zbGljZSgwLCBsZW5ndGgpXG4gICAgfSxcbiAgICBzZXRQYXNzd29yZDogKHBhc3N3b3JkLCBzYWx0KSA9PiB7XG4gICAgICAgIGxldCBoYXNoID0gY3J5cHRvLmNyZWF0ZUhtYWMoJ3NoYTUxMicsIHNhbHQpXG4gICAgICAgIGhhc2gudXBkYXRlKHBhc3N3b3JkKVxuICAgICAgICBsZXQgdmFsdWUgPSBoYXNoLmRpZ2VzdCgnaGV4JylcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHNhbHQ6IHNhbHQsXG4gICAgICAgICAgICBwYXNzd29yZEhhc2g6IHZhbHVlXG4gICAgICAgIH1cbiAgICB9LFxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "helpers.js"
      ],
      "names": [
        "crypto",
        "require",
        "module",
        "exports",
        "response",
        "res",
        "result",
        "status",
        "error",
        "rank",
        "resultPrint",
        "status_code",
        "json",
        "generateSalt",
        "length",
        "randomBytes",
        "Math",
        "ceil",
        "toString",
        "slice",
        "setPassword",
        "password",
        "salt",
        "hash",
        "createHmac",
        "update",
        "value",
        "digest",
        "passwordHash"
      ],
      "mappings": "AAAAA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAhB;AACAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,QAAQ,EAAE,CAACC,GAAD,EAAMC,MAAN,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,IAA7B,KAAsC;AAC5C,QAAIC,WAAW,GAAG,EAAlB;AACAA,IAAAA,WAAW,CAACF,KAAZ,GAAoBA,KAAK,IAAI,IAA7B;AACAE,IAAAA,WAAW,CAACC,WAAZ,GAA0BJ,MAAM,IAAI,GAApC;AACAG,IAAAA,WAAW,CAACJ,MAAZ,GAAqBA,MAArB;AACA,WAAOD,GAAG,CAACE,MAAJ,CAAWG,WAAW,CAACC,WAAvB,EAAoCC,IAApC,CAAyCF,WAAzC,CAAP;AACH,GAPY;AAQbG,EAAAA,YAAY,EAAGC,MAAD,IAAY;AACtB,WAAOd,MAAM,CAACe,WAAP,CAAmBC,IAAI,CAACC,IAAL,CAAUH,MAAM,GAAG,CAAnB,CAAnB,EAA0CI,QAA1C,CAAmD,KAAnD,EAA0DC,KAA1D,CAAgE,CAAhE,EAAmEL,MAAnE,CAAP;AACH,GAVY;AAWbM,EAAAA,WAAW,EAAE,CAACC,QAAD,EAAWC,IAAX,KAAoB;AAC7B,QAAIC,IAAI,GAAGvB,MAAM,CAACwB,UAAP,CAAkB,QAAlB,EAA4BF,IAA5B,CAAX;AACAC,IAAAA,IAAI,CAACE,MAAL,CAAYJ,QAAZ;AACA,QAAIK,KAAK,GAAGH,IAAI,CAACI,MAAL,CAAY,KAAZ,CAAZ;AACA,WAAO;AACHL,MAAAA,IAAI,EAAEA,IADH;AAEHM,MAAAA,YAAY,EAAEF;AAFX,KAAP;AAIH;AAnBY,CAAjB",
      "sourceRoot": "/home/risano/PROJECTJS/NODEJS/Jeager/src/helpers",
      "sourcesContent": [
        "crypto = require('crypto');\nmodule.exports = {\n    response: (res, result, status, error, rank) => {\n        let resultPrint = {}\n        resultPrint.error = error || null\n        resultPrint.status_code = status || 200\n        resultPrint.result = result\n        return res.status(resultPrint.status_code).json(resultPrint)\n    },\n    generateSalt: (length) => {\n        return crypto.randomBytes(Math.ceil(length / 2)).toString('hex').slice(0, length)\n    },\n    setPassword: (password, salt) => {\n        let hash = crypto.createHmac('sha512', salt)\n        hash.update(password)\n        let value = hash.digest('hex')\n        return {\n            salt: salt,\n            passwordHash: value\n        }\n    },\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1570526183193
  }
}